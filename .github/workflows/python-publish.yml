# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
name: Upload Python Package

on:
  push:
    tags:
      - "[0-9]+.[0-9]+.[0-9]+"

permissions:
  contents: write
jobs:
  build:
    strategy:
      matrix:
        target-version: [py310, py311, py312]
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - name: Install the latest version of uv 📦
        uses: astral-sh/setup-uv@v2
      - name: Build package 👷‍♂️
        run: uv build --wheel
        env:
          PYFUTURE_TARGET: ${{ matrix.target-version }}
      - name: Upload wheels 👷‍♂️
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  publish-release:
    name: Upload to PyPI
    runs-on: ubuntu-latest
    needs: [build]
    permissions:
      id-token: write
    steps:
      - name: Download wheels 👷‍♂️
        uses: actions/download-artifact@v3
        with:
          name: wheels
          path: dist
      - name: Publish to PyPi 🚀
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          skip-existing: true
          packages-dir: dist
          verbose: true
      - name: Publish GitHub Release 📝
        uses: softprops/action-gh-release@v2
        with:
          name: auto-config ${{github.ref_name}}
          generate_release_notes: true
          files: |
            dist/*.whl
